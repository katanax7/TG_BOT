from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from states.registration import Registration

from database.db import add_user


router = Router()

roles_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–°–æ–∏—Å–∫–∞—Ç–µ–ª—å")],
        [KeyboardButton(text="–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å")]
    ],
    resize_keyboard=True
)

@router.message(F.text == "/start")
async def start(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å:", reply_markup=roles_kb)
    await state.set_state(Registration.choosing_role)

@router.message(Registration.choosing_role)
async def choose_role(message: Message, state: FSMContext):
    role = message.text
    if role not in ["–°–æ–∏—Å–∫–∞—Ç–µ–ª—å", "–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å"]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ä–æ–ª—å —Å –∫–Ω–æ–ø–∫–∏.")
        return
    await state.update_data(role=role)
    await message.answer("–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:")
    await state.set_state(Registration.entering_name)

@router.message(Registration.entering_name)
async def enter_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    data = await state.get_data()
    await message.answer(
        f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞):\n–†–æ–ª—å: {data['role']}\n–ò–º—è: {data['name']}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ /confirm –∏–ª–∏ –æ—Ç–º–µ–Ω–∏ /cancel"
    )
    await state.set_state(Registration.confirming)

@router.message(F.text == "/confirm", Registration.confirming)
async def confirm_registration(message: Message, state: FSMContext):
    data = await state.get_data()
    # —Ç—É—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    add_user(
        telegram_id=message.from_user.id,
        name=data["name"],
        role=data["role"]
    )

    await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ", reply_markup=None)
    await state.clear()

@router.message(F.text == "/cancel")
async def cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=None)
